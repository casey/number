#!/usr/bin/env python3.3

import sys, time, uuid, requests

endpoint = sys.argv[1]
now      = time.time()
value    = "test-" + uuid.uuid1().hex
url      = '%s/%s' % (endpoint, value)

print("testing with url %s..." % url)

def die(msg):
  sys.stdout.write("ERROR: %s\n" % msg)
  sys.exit(1)

def ok(msg):
  sys.stdout.write("OK: %s\n" % msg)

def parse(s):
  try:
    return float(s.strip())
  except:
    die('could not parse timestamp: %s' % s)

# test that get with new value 404s
r = requests.get(url)
r.status_code == 404 or die('bad status: get with new value: %s' % r.status_code)
ok('get with new value 404ed as expected')

# put new value
r = requests.put(url)
r.status_code == 201 or die('bad status: put with new value: %s' % r.status_code)
ok('put new value worked: ' + r.text)

# put old value
r = requests.put(url)
r.status_code == 200 or die('bad status: get number for put value: %s' % r.status_code)
ok('get value succeeded: ' + r.text)


# test that sequential puts give sequential numbers
# test that puts with a key that's too long fails
