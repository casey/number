#!/usr/bin/env python3.3

import sys, time, uuid, requests, time

endpoint = sys.argv[1]
now      = time.time()
value    = "test-" + uuid.uuid1().hex
url      = '%s/%s' % (endpoint, value)

ENDC  = '\033[0m'
RED   = '\033[31m'
GREEN = '\033[32m'

def test(msg):
  sys.stdout.write("%s" % msg)

def fail(msg):
  sys.stdout.write("%sFAIL%s: %s\n" % (RED, ENDC, msg))
  sys.exit(1)

def okay(msg):
  if msg:
    sys.stdout.write("%sOKAY%s: %s\n" % (GREEN, ENDC, msg))
  else:
    sys.stdout.write("%sOKAY%s\n" % (GREEN, ENDC))

def request(method, url, expected_status):
  test('%s: expecting %s... ' % (method, expected_status))
  r = requests.request(method, url)
  r.status_code == expected_status or fail('%s: %s' % (r.status_code, r.text.strip()))
  okay('%s: %s' % (r.status_code, r.text.strip()))
  return r.text

request('GET', url, 404)
request('PUT', url, 201); time.sleep(0.1)
request('PUT', url, 200)

# test that sequential puts give sequential numbers
# test that puts with a key that's too long fails
# get value for number
# get number for value
# test concurrency
# test with a larger increment
